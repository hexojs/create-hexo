name: CI

on:
  push:
    branches:
      - "main"
    paths:
      - "src/**.tsx?"
      - "package.json"
      - "tsconfig.json"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "src/**.tsx?"
      - "scripts/**"
      - "package.json"
      - "tsconfig.json"
      - ".github/workflows/ci.yml"

env:
  default_node_version: "lts/*"
  default_pnpm_version: 8

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{env.default_pnpm_version}}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.default_node_version}}
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Lint
        run: |
          pnpm run lint

  type:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{env.default_pnpm_version}}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.default_node_version}}
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Lint
        run: |
          pnpm run lint:type

  build:
    name: Build
    uses: ./.github/workflows/build.yml

  test-e2e:
    name: test-e2e
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        pm: [pnpm, npm, yarn]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/download-artifact@v4
        with:
          name: artifact

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        if: ${{ matrix.pm == 'pnpm' }}
        with:
          version: ${{env.default_pnpm_version}}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.default_node_version}}

      - name: setup 'verdaccio'
        id: verdaccio
        uses: ./.github/actions/verdaccio-actions
        with:
          verdaccio-config: .verdaccio/.verdaccio.yaml
          token-config: true
          token-content: gHz2lB9wOy+kDV4Cyy+v0w==

      - name: version for test
        run: |
          npm version major --commit-hooks false --git-tag-version false

      - name: publish to 'verdaccio'
        run: |
          npm publish --registry http://${{ steps.verdaccio.outputs.listen }}

      - name: config for test
        run: |
          mkdir ../.temp
          ${{ matrix.pm }} config set registry http://${{ steps.verdaccio.outputs.listen }}

      - name: Test via ${{ matrix.pm }}
        working-directory: ../.temp/
        timeout-minutes: 5
        run: |
          ${{ matrix.pm }} create hexo
